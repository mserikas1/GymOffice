@page "/"
@attribute [AllowAnonymous]

<PageTitle>GymOffice</PageTitle>

<AuthorizeView>
    <Authorized>
        @{ NavigationManager.NavigateTo("/"+CurrentUserRole.ToLower(), true); }
    </Authorized>
    <NotAuthorized>
        @{ NavigationManager.NavigateTo("Identity/Account/Login", true); }
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject] UserManager<IdentityUser> UserManager { get; set; } = null!;
    [Inject] NavigationManager NavigationManager { get; set; } = null!;

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    string CurrentUserRole { get; set; } = string.Empty;

    protected async Task<string> GetCurrenUserRole()
    {
        var User = (await authenticationStateTask!).User;
        if (User == null)
            return ""; // most probably, cookies are not set or a user was never logged in
        if (!User.Identity!.IsAuthenticated)
            return "";
        await Task.Delay(200); // to avoid InvalidOperationException: A second operation was started on this context instance before a previous operation completed.
        IdentityUser currentUser = await UserManager.GetUserAsync(User);
        IList<string> roles = await UserManager.GetRolesAsync(currentUser);
        return roles.FirstOrDefault() ?? "Undefined";
    }

    protected override async Task OnInitializedAsync()
    {
        if (CurrentUserRole == "")
            CurrentUserRole = await GetCurrenUserRole();
        // NavigationManager.NavigateTo("/" + CurrentUserRole.ToLower());
    }

}